# ============================================================================
# PDF to Audio Converter - Default Configuration
# ============================================================================
# This is the default configuration file for the PDF to Audio converter.
# Copy this file to 'config.yml' and modify the settings as needed.

# ============================================================================
# TEXT-TO-SPEECH (TTS) CONFIGURATION
# ============================================================================
tts:
  # TTS Provider: Choose your text-to-speech engine
  # Options: "gtts" (free), "openai" (premium), "aws" (premium)
  provider: "gtts"

  # Speaking rate/speed control (range: 0.25 - 2.0)
  # 1.0 = normal speed, 2.0 = twice as fast, 0.5 = half speed
  speaking_rate: 1.0

  # Default language for TTS (can be overridden with --lang parameter)
  default_language: "en"

  # Legacy setting for Google TTS slow speech (rarely needed)
  slow: false

  # Language code mappings for special cases
  # Maps non-standard codes to standard ones
  language_mappings:
    es_la: "es"    # Spanish Latin America -> Spanish
    en_us: "en"    # English US -> English
    en_uk: "en"    # English UK -> English

  # Voice configuration for each TTS provider
  voice:
    # Google TTS (gTTS) - Free option
    gtts: {}  # No voice selection available

    # OpenAI TTS - Premium voices with high quality
    openai:
      voice: "nova"      # Options: alloy, echo, fable, onyx, nova, shimmer
      model: "tts-1"      # tts-1 (fast) or tts-1-hd (higher quality)

    # AWS Polly - Wide selection of voices and languages
    aws:
      voice_id: "Mia"  # Female English voice
      engine: "neural"    # "standard" or "neural" (higher quality)
      # Other popular voices:
      # English: Matthew (male), Kendra (female), Joey (male)
      # Spanish: Lupe (female), Miguel (male), Conchita (Spain, female)
      # See AWS Polly documentation for complete voice list

# ============================================================================
# LARGE LANGUAGE MODEL (LLM) CONFIGURATION
# ============================================================================
llm:
  # LLM Provider for text cleaning
  # Options: "openai" (ChatGPT), "gemini" (Google)
  provider: "openai"

  # Add SSML tags to the output to improve the TTS experience.
  # This is only supported by some TTS providers (e.g., AWS Polly).
  # Options: true, false
  use_ssml: false

  # API configuration for each provider
  api:
    # OpenAI/ChatGPT settings
    openai:
      model: "gpt-3.5-turbo"    # or "gpt-4" for better quality (more expensive)
      max_tokens: 4000          # Maximum response length
      temperature: 0.1          # Lower = more consistent, higher = more creative

    # Google Gemini settings
    gemini:
      model: "gemini-pro"       # Current Gemini model
      temperature: 0.1          # Lower = more consistent, higher = more creative

  # Text cleaning prompt - This is sent to the LLM to clean PDF text
  # You can customize this prompt to handle specific types of documents
  cleaning_prompt: |
    Please process the following PDF text with these instructions:

    1. **Remove non-essential elements**: headers, footers, page numbers, and website artifacts (menus, ads, etc.).
    2. **Preserve main content**: ensure the body text remains intact.
    3. **Fix formatting**: remove unnecessary line breaks, correct broken words, and fix OCR errors.
    4. **Maintain paragraph structure**.
    5. **Return only the cleaned text** with no commentary.

    Text to clean:

  # SSML enhancement prompt - This is sent to the LLM to add SSML tags
  ssml_prompt: |
    You are an SSML expert. Your task is to convert a plain text chunk into a valid SSML document.
    The text provided is a small chunk of a larger document. You must follow these rules:

    1. **ALWAYS wrap the entire output in a single `<speak>` tag.** The output MUST be a valid SSML document.
    2. **Structure the content** using `<p>` for paragraphs and `<s>` for sentences.
    3. **Add pauses** between paragraphs or where appropriate using `<break time="500ms"/>`.
    4. **Do not add any commentary or explanations.** Return only the raw SSML.
    5. Use `<prosody rate="slow">` or `<prosody pitch="low">` for dramatic, reflective, or slower parts.
    6.**Detect and format dialogue**. If the text contains conversational structure — for example:

        ```
        - ¿Te ha gustado? –preguntó él.
        - ¡Sí! –dijo ella–. Me encantó.
        ```

        Then:
        - Add `<break time="300ms"/>` between speaker turns.
        - Optionally, vary pitch or rate per speaker to improve clarity.

      - All SSML tags must be valid XML.

    7. If `use_ssml` is `false`, return only the cleaned plain text with no SSML enhancements.


    Example Input:
    This is the first sentence. This is the second sentence.

    Example Output:
    <speak><s>This is the first sentence.</s><s>This is the second sentence.</s></speak>

    Now, process the following text chunk:


# ============================================================================
# OUTPUT CONFIGURATION
# ============================================================================
output:
  # Save original extracted text from PDF (useful for debugging)
  save_raw_text: true

  # Save LLM-cleaned text (useful for reviewing cleaning quality)
  save_cleaned_text: true

  # Save cleaned text chunks (useful for debugging chunking issues)
  save_cleaned_chunks: false

  # Enable verbose logging (shows processing steps and progress)
  verbose: true

# ============================================================================
# ADVANCED CONFIGURATION EXAMPLES (COMMENTED OUT)
# ============================================================================
# Uncomment and modify these sections for advanced usage

# Advanced TTS voice examples:
# tts:
#   voice:
#     openai:
#       voice: "nova"        # Female voice, good for audiobooks
#       model: "tts-1-hd"    # Higher quality, slower processing
#
#     aws:
#       voice_id: "Mia"      # Spanish Mexico female voice
#       engine: "neural"     # Use neural engine for better quality
#       # For multilingual content:
#       # voice_id: "Aditi"  # Supports Hindi and English

# Advanced language mappings:
# tts:
#   language_mappings:
#     pt_br: "pt"          # Portuguese Brazil -> Portuguese
#     zh_cn: "zh"          # Chinese Simplified -> Chinese
#     fr_ca: "fr-CA"       # French Canada (if supported by provider)

# Advanced LLM prompts for specific document types:
# llm:
#   cleaning_prompt: |
#     You are processing a scientific research paper. Please:
#     1. Remove headers, footers, page numbers, and references
#     2. Preserve mathematical formulas and technical terms
#     3. Maintain the logical flow of arguments
#     4. Fix OCR errors while preserving scientific notation
#     5. Remove figure captions and table references
#     6. Return only the main body text suitable for audio narration.
#
#     Text to clean:

# Custom output directory and file naming:
# output:
#   save_raw_text: true
#   save_cleaned_text: true
#   verbose: true
#   # Optional: custom file naming patterns (not implemented yet)
#   # raw_text_suffix: "_original"
#   # cleaned_text_suffix: "_processed"